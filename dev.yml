version: '3.1'
services:
    db:
      image: postgres
      restart: always
      environment:
          POSTGRES_PASSWORD: insights
          POSTGRES_USER: insights
          PGUSER: insights
          POSTGRES_DB: insights
      ports:
          - "127.0.0.1:5432:5432"
      volumes:
        - ./.unleash/create_unleashdb.sql:/docker-entrypoint-initdb.d/create_unleashdb.sql
      healthcheck:
        test: "pg_isready -h db -p 5432"
        interval: 2s
        timeout: 5s
        retries: 5
      networks:
        hbi-network:
          aliases:
            - db
    zookeeper:
      image: confluentinc/cp-zookeeper
      environment:
        - ZOOKEEPER_CLIENT_PORT=32181
        - ZOOKEEPER_SERVER_ID=1
      networks:
        hbi-network:
          aliases:
            - zookeeper
    kafka:
      image: confluentinc/cp-kafka
      ports:
        - 127.0.0.1:29092:29092
        - 127.0.0.1:9092:9092
      depends_on:
        - zookeeper
      environment:
        - KAFKA_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://kafka:29092
        - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:29092
        - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
        - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
        - KAFKA_BROKER_ID=1
        - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
        - KAFKA_ZOOKEEPER_CONNECT=zookeeper:32181
        - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      networks:
        hbi-network:
          aliases:
            - kafka
    inventory:
      image: quay.io/cloudservices/insights-inventory
      entrypoint: /bin/bash -c
      command: ["sleep 10; FLASK_APP=./manage.py flask db upgrade;  gunicorn -c gunicorn.conf.py -b 0.0.0.0:8000 -t 60 run"]
      environment:
        - INVENTORY_LOG_LEVEL=DEBUG
        - INVENTORY_DB_HOST=db
        - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
        - PROMETHEUS_MULTIPROC_DIR=/tmp
      depends_on:
        # - kafka
        db:
          condition: service_healthy
      ports:
        - "127.0.0.1:8050:8000"
      networks:
        hbi-network
      # volumes:
      #   - ./.env:/.env
networks:
    hbi-network:
      name: hbi-network
      driver: bridge
